import java.util.*;

class Candidato {
    String nome;
    int numero;
    int votos;

    Candidato(String nome, int numero) {
        this.nome = nome;
        this.numero = numero;
        this.votos = 0;
    }
}

public class Votacao {

    public static boolean nomeValido(String nome) {
        for (char c : nome.toCharArray()) {
            if (Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    public static boolean numeroValido(String texto) {
        if (texto.isEmpty()) return false;
        for (char c : texto.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Quantos candidatos? ");
        int qtd = Integer.parseInt(sc.nextLine());
        List<Candidato> candidatos = new ArrayList<>();

        for (int i = 0; i < qtd; i++) {
            String nome;
            while (true) {
                System.out.print("Nome do candidato " + (i + 1) + ": ");
                nome = sc.nextLine().trim();
                if (!nomeValido(nome)) {
                    System.out.println("Nome inválido, não deve conter números, tente novamente.");
                } else if (nome.isEmpty()) {
                    System.out.println("Nome não pode ser vazio. Tente novamente.");
                } else {
                    break;
                }
            }

            String numStr;
            while (true) {
                System.out.print("Número do candidato: ");
                numStr = sc.nextLine().trim();
                if (!numeroValido(numStr)) {
                    System.out.println("Número inválido, deve conter apenas letras, tente novamente.");
                } else {
                    break;
                }
            }
            int numero = Integer.parseInt(numStr);
            candidatos.add(new Candidato(nome, numero));
        }

        System.out.println("\nCandidatos cadastrados:");
        for (Candidato c : candidatos) {
            System.out.println(c.numero + " = " + c.nome);
        }

        System.out.println("\nInício da votação:");
        while (true) {
            System.out.println("\nCandidatos:");
            for (Candidato c : candidatos) {
                System.out.println(c.numero + " - " + c.nome);
            }
            System.out.print("Digite o número do candidato (ou -1 para encerrar): ");
            String votoStr = sc.nextLine().trim();

            if (!numeroValido(votoStr) && !votoStr.equals("-1")) {
                System.out.println("Entrada inválida! Digite apenas números válidos.");
                continue;
            }

            int voto = Integer.parseInt(votoStr);
            if (voto < 0) break;

            boolean valido = false;
            for (Candidato c : candidatos) {
                if (c.numero == voto) {
                    c.votos++;
                    valido = true;
                    break;
                }
            }
            if (!valido) {
                System.out.println("Número inválido, tente novamente!");
            }
        }

        int totalVotos = 0;
        for (Candidato c : candidatos) {
            totalVotos += c.votos;
        }

        candidatos.sort((a, b) -> Integer.compare(b.votos, a.votos));

        System.out.println("\nResultado final:");
        for (Candidato c : candidatos) {
            double perc = totalVotos > 0 ? (c.votos * 100.0 / totalVotos) : 0;
            System.out.printf("%s (%d) - %d votos (%.2f%%)%n", c.nome, c.numero, c.votos, perc);
        }

        if (!candidatos.isEmpty()) {
            Candidato vencedor = candidatos.get(0);
            System.out.println("\nVencedor: " + vencedor.nome + " (" + vencedor.numero + ")");
        }
    }
}
